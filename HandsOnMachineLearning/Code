import numpy as np
# #creating a function split train test
# def split_train_test(data, test_ratio):
# shuffled_indices = np.random.permutation(len(data))
# test_set_size = int(len(data) * test_ratio)
# test_indices = shuffled_indices[:test_set_size]
# train_indices = shuffled_indices[test_set_size:]
# return data.iloc[train_indices], data.iloc[test_indices]

#Creating a function to split train test
def split_train_test(data,test_ratio):
    shuffled_indices = np.random.permutation(len(data))
    test_set_size = int(len(data) * test_ratio)
    #take all the elements before the test_set_size
    test_indices = shuffled_indices[:test_set_size]
    #take all the elements after the test_set_size which is going to be used as a training dataset
    train_indices = shuffled_indices[test_set_size:]
    return data.iloc[train_indices], data.iloc[test_indices]
